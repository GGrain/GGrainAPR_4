{
  "details": [
    {
      "forbidden": "<p style='line-height:0px'>typedef unsigned int    UINT_32;<\/p><p style='line-height:0px'>typedef int                     SINT_32;<\/p><p style='line-height:0px'>typedef unsigned short UINT_16;<\/p><p style='line-height:0px'>typedef unsigned char   UCHAR;<\/p><p style='line-height:0px'>typedef float                   FLOAT_32;<\/p><p style='line-height:0px'>typedef double               FLOAT_64;<\/p><p style='line-height:0px'>\/\/#define long 100<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int func111(int parm)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int v = parm + 10;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return v;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-1-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#define IF0(x) if(0 == (x)) {<\/p><p style='line-height:0px'>int main112(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int test = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;IF0(test)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test = test + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-1-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>#define find# 1333<\/p><p style='line-height:0px'>#define find## 4333<\/p><p style='line-height:0px'>#define LIN### 3333<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>#define A(x)           #x            <\/p><p style='line-height:0px'>#define B(x, y)        x ##y        <\/p><p style='line-height:0px'>#define C(x, y)        # x ## y      \/\/more than one # or ##<\/p><p style='line-height:0px'>#define D(x, y, z, yz) x ## y ## z   \/\/more than one # or ##<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>#define CSS_EX(className) \\<\/p><p style='line-height:0px'>{\\<\/p><p style='line-height:0px'>Delete##ClassName();\\<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-1-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int func114(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int test = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;if (test) {<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int test2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test2 = test2 + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test += 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-1-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>struct a<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct b<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct c<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct d<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int e;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int f;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int g;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  j;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct D_A<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int id;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct C_A<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;struct D_A da;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct B_A<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;struct C_A ca;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct A_A<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;struct B_A ba;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a  x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x.j = 0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B_A b_a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>struct a<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct b<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct c<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct d<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int e;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int f;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int g;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  j;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct D_A<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int id;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct C_A<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;struct D_A da;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct B_A<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;struct C_A ca;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct A_A<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;struct B_A ba;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a  x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x.j = 0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B_A b_a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-1-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/ <\/p><p style='line-height:0px'>\/\/ Copy from cppcheck\\lib\\color.h {<\/p><p style='line-height:0px'>\/\/<\/p><p style='line-height:0px'>enum class Color {<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Reset      = 0,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Bold       = 1,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Dim        = 2,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;FgRed      = 31,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;FgGreen    = 32,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;FgBlue     = 34,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;FgMagenta  = 35,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;FgDefault  = 39,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;BgRed      = 41,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;BgGreen    = 42,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;BgBlue     = 44,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;BgDefault  = 49<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>\/\/ <\/p><p style='line-height:0px'>\/\/ }<\/p><p style='line-height:0px'>\/\/<\/p><p style='line-height:0px'>const int ONE = 1;<\/p><p style='line-height:0px'>const int THREE = 3.0;<\/p><p style='line-height:0px'>int TWO = 2;<\/p><p style='line-height:0px'>const char STRING_DECL[] = \"string\";<\/p><p style='line-height:0px'>const float FLOAT_NUM = 0.1f;<\/p><p style='line-height:0px'>const double DOUBLE = 1.2;<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>float Fun(int param)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float  ret = FLOAT_NUM;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (param > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret = (float)1.3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (param > ONE)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret = (float)1.5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (param > 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret = (float)1.5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>Error:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-1-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>void funcA1001(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;struct data1 {<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char  cDummy1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char  c1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;} scl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int i1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;i1 = static_cast<int>(&scl.c1 - &scl.cDummy1);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main1001(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ix, iy;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fx = 1.85;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fy = -1.85;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = static_cast<int>(fx);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = fx;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = (int)fx;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = fy;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>#define Round(x) ((x) >= 0 ? (int)((x) + 0.5) : (int)((x) - 0.5))<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ix, iy;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fx = 1.85;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fy = -1.85;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = (int)(fx);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = Round(fx);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = (int)(fy);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = Round(fy);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-10-1"
    },
    {
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double dData = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = 3.90;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = dData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = (float)(dData);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = static_cast<float>(dData);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void funcA1022(float para);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>float funcA102(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double dData = 10.95;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fData = 0.53;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = dData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = 1.67;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;funcA1022(dData);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = (float)dData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = static_cast<float>(dData);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0.53;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-10-2"
    },
    {
      "recommend": "<p style='line-height:0px'>short func1103(char);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>short main1103(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed char cVar = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short sVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int iVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;func1103(5);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;long lVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;cVar = sVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sVar = iVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;cVar = (signed char)sVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sVar = (short)iVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iVar = (int)lVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 8;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-10-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <stdlib.h>                     \/* To obtain macro  NULL          *\/<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>#define NULL 0<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>typedef void ( *fp16 ) ( short n );<\/p><p style='line-height:0px'>typedef void ( *fp32 ) ( int n );<\/p><p style='line-height:0px'>typedef fp16 ( *pfp16 ) ( void );<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>extern void f ( short n );<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct s;                   \/* Incomplete type                         *\/<\/p><p style='line-height:0px'>struct t;                   \/* A different incomplete type              *\/<\/p><p style='line-height:0px'>struct s *sp;<\/p><p style='line-height:0px'>struct t *tp;<\/p><p style='line-height:0px'>short  *ip;<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct s *ff( void );<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void func0110043(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char *PORTA = (char *) 0x0002;    \/* 违背1 *\/<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short *p;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  addr = (int) &p;          \/* 违背2 *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char *q    = (char*) addr;      \/* 违背3 *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;bool   b    = ( bool) p;            \/* 违背4 *\/<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;enum etag { A, B } e = ( enum etag ) p;   \/* 违背5 *\/<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int func0110041(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;ip = (short  * ) sp;     \/* Non-compliant                           *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;sp = ( struct s * )1234;   \/* Non-compliant                           *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;\/\/tp = ( struct t * ) sp;     \/* Non-compliant - casting pointer into a different incomplete type               *\/<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;sp = NULL;                  \/* Compliant - exception 1                 *\/<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;( void )ff();             \/* Compliant - exception 2                 *\/<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;return (int)sp;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>char* func0110042(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fp16 fp1 = NULL;                         \/* Compliant - exception 1       *\/<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fp32 fp2 = ( fp32 ) fp1;                \/* Non-compliant - function<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* pointer into different<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* function pointer              *\/<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fp16 fp3 = ( fp16 ) 0x8000;             \/* Non-compliant - integer into function pointer              *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fp16 fp4 = ( fp16 ) 1.0e6F;             \/* Non-compliant - float into function pointer              *\/<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;f ( 1 );             \/* Compliant - exception 3 - implicit conversion<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* of f into pointer to function                    *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fp16 fp5 = f;        \/* Compliant - exception 3                          *\/<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (char*)10;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-10-4"
    },
    {
      "recommend": "<p style='line-height:0px'>int var;<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void Initialization(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;var = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main1112(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int misdis;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;misdis = 0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Initialization();<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-11-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int var1;<\/p><p style='line-height:0px'>int var2;<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>struct tagStu {<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int name;<\/p><p style='line-height:0px'>} stu;<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void Initialization(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;var1 = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main1112(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int misdis = 0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Initialization(misdis);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;misdis += var1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int var1;<\/p><p style='line-height:0px'>int var2;<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void Initialization(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;var1 = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;var2 = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main1112(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int misdis = 0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Initialization();<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;misdis += var1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-11-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1204a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 1, y = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned long flag = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (flag == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (4  == x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(y == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(y != 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int fun1204a1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 1, <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short y = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;long flag = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (flag == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (4  == x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(y == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun1204a2(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short y = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int flag = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (flag == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (flag != 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (4  == x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(y == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-12-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>void func1311(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;char cChar = 'a';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed char scChar = 'b';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;char a = 'a';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed char b = 'b';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed char c = 'c';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;int   i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;int   in = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed int   j = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed int   jn = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned int jVar = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned int   juVar = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;short shortInt = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned short shortUint = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;short int shortInt2 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned short int shortUint2 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;long  longInt = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned long longUInt = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;long  longInt2 = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned long longUInt2 = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;float   floatVar = 5.f;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;double douleVar = 5.;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;long double ld = 6.;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;char cChar = 'a';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed char scChar = 'b';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed char sc = 'c';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;int iVar = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned int   uiVar = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;short sVar = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed short sVar2 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned short usVar = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed short int ssVar3 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed short int sVar3 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;short int sVar4 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned short int usVar2 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;long lLong = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned long ulLong = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;long int lLong2 = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;signed long int slLong2 = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned long int ulLong2 = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;float   fVar = 5.f;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;double dVar = 5.;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;long double ldVar = 6.;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-13-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;register int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j = 0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 1000; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j += i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (j);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-13-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main122a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funca1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funca2(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funca3(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funca3a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funca5(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funca6(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funca5a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funca8(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funca6a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-2-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main122a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-2-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/Test commend line<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main10203a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>\/*Test commend line*\/<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main10203a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-2-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include \"stdio.h\"<\/p><p style='line-height:0px'>int Add(int a, int b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return a + b;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main131a()<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int(*fun1)(int a, int b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (fun1 == NULL) {<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun1 = &Add;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;cout << (*fun1)(1, 2) << endl;\/\/ʹ�ú���ָ��<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;cout << fun1(1, 2) << endl;\/\/����ֱ��ʹ��fun1<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;system(\"pause\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>\/\/#define NULL 0<\/p><p style='line-height:0px'>int fun(int para1, int para2);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 2, b = 1, c = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == &fun)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int (*p)(int, int) = &fun;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = p(a, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(int para1, int para2)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (para1 - para2);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-3-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main132() {<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void *data = \"Hello World\";\/\/һ��������ָ���������е����ͣ������Ǵ洢�ַ�������<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/printf(\"%s\\n\", data);\/\/��������<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void *ptr = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short uid = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (void *)(&uid);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (&uid);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-3-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>void find(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 7, j = 7;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (2 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (3 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (4 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(5 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (6 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (7 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (8 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 11111;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (9 > i) \/\/ Level 9<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 22222;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (1000 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 333333;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else \/\/ Level 10<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 444444;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 33333;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (8 > i) <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else \/\/ Level 8<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else \/\/Level 4<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (5 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (6 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (7 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 33333;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (8 > i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else \/\/ Level 8<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else \/\/ Level 5<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else \/\/ Level 3<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x2 = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y2 = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x3 = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y3 = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x4 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y4 = 3;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (x > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (y > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (x2 > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (y2 > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (x3 > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (y3 > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (x4 > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(0 == x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-4-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;<\/p><p style='line-height:0px'>int main ()<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int a = 10;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;LOOP:do<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( a == 15)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/ 跳过迭代<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = a + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto LOOP;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = a + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;} while(a < 20);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-5-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed short xdata = -2, ydata;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = xdata << 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "A-1-6-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int xdata = 3, ydata = 2, result;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;result = xdata \/ ydata;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;result \/= xdata;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "A-1-6-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int fun(void);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = fun();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *p = (int*)malloc(3  * sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == p)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/free(p);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/p = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "A-1-6-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'>#include <string.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void find165(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char dest[50] = { 0 };<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char src[50] = { \"http:\/\/c.biancheng.net\" };<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strcpy(dest, src);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;puts(dest);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-6-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'>#include <string.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int find165a()<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char src[50], dest[50];<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strcpy(src, \"This is source\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strcpy(dest, \"This is destination\");<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strcat(dest, src);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/printf(\"���յ�Ŀ���ַ����� |%s|\", dest);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return(0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-6-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>void main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int datax, datay, dataz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;datax = (dtay = 1, dataz = 2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "A-1-6-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>void fin174(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, int a11, int a12)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a1 = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a2 = 3;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-7-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;puts(\"About to abort....\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;abort();<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;puts(\"This will never be executed!\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;exit(EXIT_SUCCESS);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-7-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int function(int x);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int y = function(6);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int* x = (int*)malloc(10);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;malloc(5);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = function(3);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts(\"About to abort....\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abort();<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts(\"This will never be executed!\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(EXIT_SUCCESS);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int function(int x)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x + 10;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-7-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>void fun1(int p[10])<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p[i] = p[i] + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void fun2(int *p)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p[i] = p[i] + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main10705a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a[6] = {0, 1, 2, 3, 4, 5};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = sizeof(a) \/ sizeof(int);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun1(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun2(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>void fun1(int p[], int n)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p[i] = p[i] + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void fun2(int *p, int n)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p[i] = p[i] + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main10705a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a[6] = {0, 1, 2, 3, 4, 5};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = sizeof(a) \/ sizeof(int);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun1(a, i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun2(a, i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-7-5"
    },
    {
      "forbidden": "<p style='line-height:0px'><\/p><p style='line-height:0px'>int main10802a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, nV = 0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i++;;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return nV;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-8-1"
    },
    {
      "recommend": "<p style='line-height:0px'>typedef int int32;<\/p><p style='line-height:0px'>void A_1_8_2_g(int);<\/p><p style='line-height:0px'>int main10802a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int z = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int nV = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;const int a = 45;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;const int b = 55;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j = z;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = j + 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A_1_8_2_g(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return nV;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-8-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int f(int j)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return j;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main10803a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, nV = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return nV;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int f183(int j)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return j;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main10803r(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, nV = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = f183(nV);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return i;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-8-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int varI;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;long varL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float floatF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double doubleD;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int ucV = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;long               IV =0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float               fV = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double           ldV = 0.0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  iV = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iV = 5;    <\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;varI = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;varL = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float F = 0.3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double D = 0.2;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int ucV = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;long               IV =0L;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float               fV = 0.0F;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double           ldV = 0.0L;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int i;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = 0U;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-8-4"
    },
    {
      "recommend": "<p style='line-height:0px'>int main10901a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;int a = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;const int* p2 = &a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;const int  b =1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;for(;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;do<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-9-1"
    },
    {
      "recommend": "<p style='line-height:0px'>int main10902a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;int a = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;const int* p2 = &a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;const int  b =1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;for(;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;for(;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;for(;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;do<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;do<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;do<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-9-2"
    },
    {
      "recommend": "<p style='line-height:0px'>int main10903a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;int a = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;const int* p2 = &a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;const int  b =1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;for(;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;for(;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;for(;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;do<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (b == 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;do<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;do<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a == 3)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(true);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-1-9-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>class A;<\/p><p style='line-height:0px'>class B;<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetA(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A::A(void) : a(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void A::SetA(int va)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = va;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class B : virtual public A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetB(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b1;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B::B(void) : A(), b1(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void B::SetB(int vb)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b1 = vb;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;SetA(b1 + 1);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20104(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b.SetB(1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-2-1-1"
    },
    {
      "recommend": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>class B<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;inline int functionA(int a = 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (a + b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;inline int functionB(int a = 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a += 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (a + b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;inline int functionC(int a = 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 0:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b += 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b += 20;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b++;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (a + b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;inline int functionD(int a = 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a += 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a += 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a += 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a += 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a += 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b += 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b += 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b += 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b += 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b += 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (a + b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B::B(void) : b(1)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B::~B(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;B *b = new B();<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>inline const char* dbtest(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a % 2  > 0) ? \"test1\" : \"test2\";<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-2-1-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int get_a(int *a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;int *b = a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;*b = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;return *b;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>char get_b(char *b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;char *c = b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;*c = 'c';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;return *c;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int funcA251(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;(void)get_a(&a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;a = (int)get_b('d');<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return a;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-2-5-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class Foo271f<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo271f(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo271f(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetVar(int var)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = var;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}\t<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo271f::Foo271f(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo271f::~Foo271f(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20701a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo271f thef;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;thef.SetVar(2);   <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class Foo271r<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo271r(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo271r(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetVar(int var);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo271r::Foo271r(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo271r::~Foo271r(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void Foo271r::SetVar(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20701r(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo271r thef;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;thef.SetVar(2);   <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-2-7-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namespace std;<\/p><p style='line-height:0px'>class Foo272f<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo272f(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo272f(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetVar(int var)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = var;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}\t<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo272f::Foo272f(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo272f::~Foo272f(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>class A {<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;explicit A(const A &cr);<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int y;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>A::A(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;x = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;y = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>A::A(const A &cr)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;this->x = cr.x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;this->y = cr.y;<\/p><p style='line-height:0px'>}  <\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void funcA2702(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;A res;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;A &res2 = res;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20701a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo272f* pThef = new Foo272f();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;const int i =2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;pThef->SetVar(2);   <\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;funcA2702();<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete pThef;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-2-7-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 20;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int a1 = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int* a2 = new int(2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i > 10)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw &a1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw a2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(int* b)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << b << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/ 提示1： 是否需要释放动态分配的内存？<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a1 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(char& c)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << b << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/ 提示1： 是否需要释放动态分配的内存？<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a1 = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (1);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-2-8-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>template <class T><\/p><p style='line-height:0px'>class Z {};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>template<class T> <\/p><p style='line-height:0px'>void f(T t) <\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-2-9-1"
    },
    {
      "recommend": "<p style='line-height:0px'>int main20902a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;const int* p2 = &a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;const int  b =1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-2-9-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>class A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int m_data;<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;explicit A(int a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_data = a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;const A& operator,(const A& a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_data -= a.m_data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return *this;\t<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;const A& operator||(const A& a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_data += a.m_data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return *this;\t<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;const A& operator&&(const A& a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_data *= a.m_data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return *this;\t<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main()<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A c(0);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A a(10); <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A b(5);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;c = a,b; <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;c = a||b; <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;c = a&&b; <\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "A-2-9-3"
    },
    {
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>int main20904a(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;cout << \"Hello!\" << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "A-2-9-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>#define long 100<\/p><p style='line-height:0px'>#define asm 1000<\/p><p style='line-height:0px'>#define asm ASM<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = long;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#define LONG_NUM 100<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = LONG_NUM;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>typedef struct <\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed int si01 : 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed int si02 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int serv : 29;<\/p><p style='line-height:0px'>} sData;<\/p><p style='line-height:0px'>int main10(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sData my_data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.si01 = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.si02 = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>typedef struct <\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed int si01 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed int si02 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int serv : 28;<\/p><p style='line-height:0px'>} sData;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sData my_data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.si01 = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.si02 = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-10"
    },
    {
      "forbidden": "<p style='line-height:0px'>typedef struct <\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short d01 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short d02 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short res : 12;<\/p><p style='line-height:0px'>} sData;<\/p><p style='line-height:0px'>int main11(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sData my_data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.d01 = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.d02 = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.res = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>typedef struct <\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed short d01 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d02 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short res : 12;<\/p><p style='line-height:0px'>} sData;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sData my_data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.d01 = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.d02 = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;my_data.res = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-11"
    },
    {
      "forbidden": "<p style='line-height:0px'>typedef struct <\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char d01 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char d02 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char d03 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d04 : 2;<\/p><p style='line-height:0px'>} stData1;<\/p><p style='line-height:0px'>typedef struct <\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d01 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d02 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d03 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d04 : 12;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d05 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d06 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d07 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d08 : 8;<\/p><p style='line-height:0px'>} stData2;<\/p><p style='line-height:0px'>int main12(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;stData1 my_data1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;stData2 my_data2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>typedef struct <\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char d01 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char d02 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char d03 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char d04 : 2;<\/p><p style='line-height:0px'>} stData1;<\/p><p style='line-height:0px'>typedef struct <\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d01 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d02 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d03 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d04 : 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d05 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d06 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d07 : 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short d08 : 10;<\/p><p style='line-height:0px'>} stData2;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;stData1 my_data1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;stData2 my_data2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-12"
    },
    {
      "forbidden": "<p style='line-height:0px'>int fun4(int, int);<\/p><p style='line-height:0px'>int fun5();<\/p><p style='line-height:0px'>int fun6(int, int);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main13(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a, b, c, d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;c = fun5(a, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;d = fun6(a, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun4(int a, int b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = a + b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun5(int a, int b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = a + b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun6(int a, int b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = a - b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int fun1(int a, int b);<\/p><p style='line-height:0px'>int fun2(int a, int b);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a, b, c, d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;c = fun1(a, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;d = fun2(a, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun1(int a, int b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = a + b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun2(int a, int b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = a - b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-13"
    },
    {
      "forbidden": "<p style='line-height:0px'>int find(short height);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>float load(int height);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int save(int height);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j1, j2, j3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = 1000;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j1 = find(i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j2 = load(i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j3 = save(i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int find(int height)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int h;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;h = height + 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return h;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int load(int height)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int h;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;h = height - 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return h;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int save(int width)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int w;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;w = width - 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return w;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-14"
    },
    {
      "forbidden": "<p style='line-height:0px'>int fun(height, int test);<\/p><p style='line-height:0px'>int main15(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = 1000;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = fun(i, i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int fun(height, int test)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int h;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;h = height + 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return h;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-15"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main118(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int array[] = {0, 1, 2};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 3; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = data + array[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int array[3] = {0, 1, 2};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 3; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = data + array[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-18"
    },
    {
      "forbidden": "<p style='line-height:0px'>extern int a1 = 2;    \/\/违背 - 在声明中初始化extern变量<\/p><p style='line-height:0px'>int main119(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a1 = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>extern int a;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-19"
    },
    {
      "forbidden": "<p style='line-height:0px'>#define JUDGE if<\/p><p style='line-height:0px'>#define int64 long<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main2(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int64 i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;JUDGE(0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#define JUDGE if<\/p><p style='line-height:0px'>#define int64 long<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main2(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int64 i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;JUDGE(0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main120(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char k;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;k = k + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = (char)0xFF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = k + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = i + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = (unsigned char)0xFF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = i + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-20"
    },
    {
      "forbidden": "<p style='line-height:0px'>int fun();<\/p><p style='line-height:0px'>int datax = 0;<\/p><p style='line-height:0px'>int datay = 0;<\/p><p style='line-height:0px'>int main123(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int iz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;datax = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;datay = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iz = fun();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun()<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int temp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;temp = 2 * datax + 3 * datay;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return temp;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int fun(void);<\/p><p style='line-height:0px'>int datax = 0;<\/p><p style='line-height:0px'>int datay = 0;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int iz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;datax = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;datay = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iz = fun();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int temp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;temp = 2 * datax + 3 * datay;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return temp;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-23"
    },
    {
      "forbidden": "<p style='line-height:0px'>typedef int mytype;<\/p><p style='line-height:0px'>int main3(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;typedef float mytype;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;mytype x = 1.0; <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main4(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int FILE = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int cout = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int cin = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int endl = 0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>#define BLOCKDEF 1U<\/p><p style='line-height:0px'>unsigned int fun1(void);<\/p><p style='line-height:0px'>unsigned int fun2(void);<\/p><p style='line-height:0px'>int main5(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a1 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a2 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a3 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a4 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a1 = fun1();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a2 = a1 + BLOCKDEF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a3 = fun2();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a4 = a3 + BLOCKDEF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>#define BLOCKDEF 2U<\/p><p style='line-height:0px'>unsigned int fun1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = x + BLOCKDEF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int fun2(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = x + BLOCKDEF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#define BLOCKDEF 1U<\/p><p style='line-height:0px'>unsigned int fun1(void);<\/p><p style='line-height:0px'>unsigned int fun2(void);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a1 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a2 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a3 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a4 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a1 = fun1();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a2 = a1 + BLOCKDEF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a3 = fun2();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a4 = a3 + BLOCKDEF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>#define BLOCKDEF 2U<\/p><p style='line-height:0px'>unsigned int fun1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = x + BLOCKDEF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int fun2(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = x + BLOCKDEF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>unsigned int fun3(void);<\/p><p style='line-height:0px'>unsigned int fun4(void);<\/p><p style='line-height:0px'>int main6(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a1 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a2 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a3 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a4 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a1 = fun3();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a2 = fun4();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a3 = a1 + a2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int fun3(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 0U;<\/p><p style='line-height:0px'>#define BLOCKDEF 2U<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = x + BLOCKDEF;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int fun4(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = x + BLOCKDEF;<\/p><p style='line-height:0px'>#undef BLOCKDEF<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>unsigned int fun1(void);<\/p><p style='line-height:0px'>unsigned int fun2(void);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a1 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a2 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a3 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int a4 = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a1 = fun1();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a2 = fun2();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a3 = a1 + a2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int fun1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 0U;<\/p><p style='line-height:0px'>#define BLOCKDEF1 2U<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = x + BLOCKDEF1;<\/p><p style='line-height:0px'>#undef BLOCKDEF1<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int fun2(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 0U;<\/p><p style='line-height:0px'>#define BLOCKDEF2 1U<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = x + BLOCKDEF2;<\/p><p style='line-height:0px'>#undef BLOCKDEF2<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>#define pabs(x) x >= 0 ? x : -x<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main7(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int result;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 6;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/* ... *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;result = pabs(a) + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#define pabs(x) (x > 0 ? x : -x)<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int result;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 6;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/* ... *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;result = pabs(a) + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-7"
    },
    {
      "forbidden": "<p style='line-height:0px'>struct<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data2;<\/p><p style='line-height:0px'>} sData;<\/p><p style='line-height:0px'>union<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char cd[4];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int                     id;<\/p><p style='line-height:0px'>} uData;<\/p><p style='line-height:0px'>enum<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A_Level = 0,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B_Level,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;C_Level,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D_Level,<\/p><p style='line-height:0px'>} eLevel;<\/p><p style='line-height:0px'>int main8(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;eLevel = B_Level;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sData.data1 = 2000;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;uData.id = sData.data1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>struct S_Data<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data2;<\/p><p style='line-height:0px'>} sData;<\/p><p style='line-height:0px'>union U_Data<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char cd[4];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int                     id;<\/p><p style='line-height:0px'>} uData;<\/p><p style='line-height:0px'>enum E_Level<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A_Level = 0,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B_Level,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;C_Level,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D_Level,<\/p><p style='line-height:0px'>} eLevel;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;eLevel = B_Level;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sData.data1 = 2000;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;uData.id = sData.data1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-8"
    },
    {
      "forbidden": "<p style='line-height:0px'>struct Sdata<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char id;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct Scoor<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char xs;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char ys;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char zs;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;};<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/Scoor** pData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/Scoor* pData2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;\/\/Scoor pData3;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct Scoor2<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char xs;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char ys;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char zs;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} coor2;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main9(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct Sdata data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;data.id = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>struct Sdata<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char id;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct Scoor<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char xs;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char ys;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned char zs;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} coor;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct Sdata data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;data.id = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-1-9"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1001(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ix, iy;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fx = 1.85;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fy = -1.85;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = fx;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = (int)fx;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = fy;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#define Round(x) ((x) >= 0 ? (int)((x) + 0.5) : (int)((x) - 0.5))<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ix, iy;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fx = 1.85;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fy = -1.85;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = (int)(fx);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = Round(fx);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = (int)(fy);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = Round(fy);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-10-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1002(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed char cVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short sVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int iVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;long lVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;cVar = sVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;cVar = (signed char)(sVar);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sVar = static_cast<short>(iVar);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iVar = lVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed char cVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short sVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int iVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;long lVar = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;cVar = (signed char)sVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sVar = (short)iVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iVar = (int)lVar;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-10-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1003(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double dData = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = dData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double dData = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float fData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = dData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = (float)dData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fData = static_cast<float>(dData);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-10-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <stdlib.h><\/p><p style='line-height:0px'>#define NULL 0<\/p><p style='line-height:0px'>int main1004(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int *ptr = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short uid = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (unsigned short *)(&uid);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (unsigned short *)&uid;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (&uid);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = &uid;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int* s = ptr;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int *ptr = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short uid = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (unsigned short *)(&uid);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-10-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <stdlib.h><\/p><p style='line-height:0px'>#define NULL 0<\/p><p style='line-height:0px'>int func1005(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int *ptr = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int adr = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int uid = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (&adr);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (unsigned int)(&adr);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main1005(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int *ptr = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int adr = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int uid = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = adr;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = &adr;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (&adr);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (unsigned int)(&adr);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;adr = &uid;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;adr = &uid;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int *ptr = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int adr = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int uid = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ptr = (unsigned int*)adr;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;adr = (unsigned int)(&uid);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-10-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1006(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int sx, sy = 10, sz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sx = (unsigged int)y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sx = (unsigned int)sy + 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sx = static_cast<unsigned int>(sy) + 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sz = (unsigned int)((float)((sx + sy) * 2 \/ 3) + 0.5);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int sx, sy = 10, sz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sx = sy + 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sz = (unsigned int)((float)((sx + sy) * 2 \/ 3) + 0.5);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-10-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1101(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j = 0, k;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float x, y, z;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i == 0)  {<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = z;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = j;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = z;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;k = k << 10;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float x, y, z;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = z;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = z;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-11-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int Gstate;<\/p><p style='line-height:0px'>int main1102(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;static int StateN;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 == Gstate)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StateN = StateN + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int Gstate = 0;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;static int StateN = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 == Gstate)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StateN = StateN + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-11-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>struct Spixel<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int colour;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct Scoords<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned int y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} coords;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int main1103(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct Spixel pixel = {1, 2, 3};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>struct Spixel<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int colour;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct Scoords<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned int y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} coords;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct Spixel pixel = {1, {2, 3}};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-11-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1104(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;enum Etype {<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RED,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHITE = 0,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BLUE<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} edata;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;edata = BLUE;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;enum Etype1 {<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RED = 0,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WHITE,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BLUE<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} edata1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;enum Etype2 {<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BLACK = 3,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GREEN = 4,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;YELLOW = 5,<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} edata2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;edata1 = BLUE;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;edata2 = GREEN;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-11-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>typedef unsigned int BOOL;<\/p><p style='line-height:0px'>int main1201(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;BOOL outReg1, outReg2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int r = 100, h = 500, flag = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;outReg1 = (r > 100);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;outReg2 = (h > 300);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (outReg1 > outReg2)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (outReg1 < outReg2)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>typedef unsigned int BOOL;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;BOOL outReg1, outReg2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int r = 100, h = 500, flag = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;outReg1 = (r > 100);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;outReg2 = (h > 300);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (outReg1 && (!outReg2))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((!outReg1) && outReg2)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-12-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int fsub(int* a, int* b);<\/p><p style='line-height:0px'>int main1202(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 1, b = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sub = fsub(&a, &b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fsub(int* a, int* b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (a > b)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = (*a) - (*b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (a < b)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = (*b) - (*a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return sub;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int fsub(int* a, int* b);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 1, b = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sub = fsub(&a, &b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fsub(int* a, int* b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((*a) > (*b))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = (*a) - (*b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if ((*a) < (*b))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = (*b) - (*a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return sub;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-12-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1203(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int P = 1000;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float d = 0.435;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (435 == (P * d))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (435 != (P * d))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fsub1(int* a, int* b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((*a) > (*b))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = (*a) - (*b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if ((*a) < (*b))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = (*b) - (*a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return sub;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int P = 1000;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float d = 0.435;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (fabs(435 - (P * d)) < 1e-4)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((435 >= (P * d) + 1e-4) || (435 <= (P8d) - 1e-4))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fsub(int* a, int* b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((*a) > (*b))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = (*a) - (*b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if ((*a) < (*b))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = (*b) - (*a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sub = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return sub;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-12-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1204(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = 1, y = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int flag = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (x >= 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0  <= x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(y <= 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(y > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(0 < y)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(y < 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 6;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(0 > y)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag = flag + 7;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-12-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1205(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y, i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x= 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = -2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (y < x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(y <= 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y, i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x= 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = -2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (y < (int)x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if(y <= 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-12-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include \"cmath\"<\/p><p style='line-height:0px'>#include \"cstdio\"<\/p><p style='line-height:0px'>#include \"iostream\"<\/p><p style='line-height:0px'>#include \"casert\"<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void func1(int* sign2)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;*sign2= 1;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int sign = 0;<\/p><p style='line-height:0px'>int main1301(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int local = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sign = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sign2 =0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-13-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>float fSpeedO, fSpeed0;<\/p>",
      "rule": "R-1-13-10"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1311(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int l = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int O = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;l = O;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;O = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-13-11"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main1313(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;register int i = 0;              \/*违背1*\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int array[11] = {0};<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(void)scanf(\"%d\", array[i]);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for(volatile register int j = 0; j < 10; j++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(void)printf(\"%d\\n\", array[j]);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-13-12"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1313(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int i, z[100];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;volatile unsigned int v = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 100; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z[i] = 3 * v * v + 2 * v + i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int i, j, z[100];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;volatile unsigned int v = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 100; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = v;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z[i] = 3 * j * j + 2 * j + i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-13-13"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>int fun(int width);<\/p><p style='line-height:0px'>int main1314(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = fun(NULL); <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun1314(int width)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int w;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;w  = width - 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return w;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>int fun(int width);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = fun(0); <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(int width)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int w;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;w  = width - 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return w;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-13-14"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1315(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned long long var1 = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short usX;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int uiY;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned long ulZ;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;usX = -10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;var1 = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;var1 = -100;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;var1 = 1 - 100;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/...... <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short usX;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;usX = (unsigned short)(-10);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/...... <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-13-15"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <stdio.h><\/p><p style='line-height:0px'>int main1316(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char buf[8];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char buf2[] = \"Test\";<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int buf3[10];<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;buf[0] = 'y';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;buf[1] = 'e';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;buf[2] = 's';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/printf(\"%s\\n\", buf);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char buf[8];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;buf[0] = 'y';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;buf[1] = 'e';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;buf[2] = 's';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;buf[3] = '\\0';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%s\\n\", buf);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-13-16"
    },
    {
      "forbidden": "<p style='line-height:0px'>int sign132 = 0;<\/p><p style='line-height:0px'>int func132(int sign132)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int local = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;local = sign132;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return local;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main1302(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-13-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>void misdis(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main1303(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int misdis;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;misdis = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-13-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>struct POINTA<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int y;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>struct POINTB<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int z;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int main1304(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int POINTA;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct POINTB POINTB;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;POINTA = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;POINTB.y  = POINTA;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>struct POINTA<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int y;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>struct POINTB<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int z;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int pot_y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;struct POINTB spotb;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;pot_y = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;spotb.y  = pot_y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-13-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>enum Name_type { first = 0, second} EnumVar;<\/p><p style='line-height:0px'>int main1305(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int second = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;EnumVar = second;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-13-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>typedef unsigned int TData;<\/p><p style='line-height:0px'>unsigned int fun(unsigned int var);<\/p><p style='line-height:0px'>int main1306(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int datax = 1, datay;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;datay = fun(datax);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>unsigned int fun(unsigned int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int TData = var + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (2 * TData);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-13-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main1307(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, ix, iy, ip;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 == ix)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int ip = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip = ip + ix;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = ip;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-13-7"
    },
    {
      "forbidden": "<p style='line-height:0px'>int nSpeed, nspeed;<\/p>",
      "rule": "R-1-13-8"
    },
    {
      "forbidden": "<p style='line-height:0px'>float fSpeedl, fSpeed1;<\/p>",
      "rule": "R-1-13-9"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main201(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data[10];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data[i] = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data[10];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data[i] = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-2-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main202(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/........<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 2;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/........<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-2-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main203(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>#include \"..\\061\\061.h\"<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ix = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int iy = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int iz = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int idata = ix + iy + iz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include \"..\\061\\061.h\"<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ix = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int iy = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int iz = 2<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int idata = ix + iy + iz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-2-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main204(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((0 == i) || (1 == j) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 1, k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 0, b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (((0 == i) || (1 == j)) && (2 == k))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-2-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main205(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int i, tbc;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;tbc  = 0x80;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (tbc&0x80 == 0x80)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int i, tbc;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;tbc  = 0x80;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((tbc&0x80) == 0x80)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-2-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main206(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int local = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sign = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/*<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;note for code1<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/*<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node for code2<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/   \/*<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-2-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>int main301(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int array[5] = {0, 1, 2, 3, 4};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int *p1_ptr =NULL, **p2_ptr = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int ***p3_ptr = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int data[5];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p1_ptr = array;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p2_ptr = &p1_ptr;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p3_ptr = &p2_ptr;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 5; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data[i] = *(**p3_ptr + i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <cstdio><\/p><p style='line-height:0px'>#include <cstdlib><\/p><p style='line-height:0px'>int fr(void);<\/p><p style='line-height:0px'>int main310(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = fr();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (-3);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fr(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;FILE* stream = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char s[100];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == (stream = fopen(\"data\", \"r\")))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"The file 'data' was not opened\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/fclose(stream);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"The file 'data' was opened\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = fscanf(stream, \"%s\", s);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/fclose(stream);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>int fr(void);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = fr();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fr(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;FILE* stream = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char s[100];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == (stream = fopen(\"data\", \"r\")))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prinf(\"The file 'data' was not opened\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prinf(\"The file 'data' was opened\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = fscanf(stream, \"%s\", s);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fclose(stream);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-10"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>#include <string><\/p><p style='line-height:0px'>int fun(int para1, int para2);<\/p><p style='line-height:0px'>int main302(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 2, b = 1, c = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == fun)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int (*p)(int, int) = fun;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = p(a, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(int para1, int para2)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (para1 - para2);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>int fun(int para1, int para2);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 2, b = 1, c = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == &fun)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int (*p)(int, int) = &fun;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c = p(a, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(int para1, int para2)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (para1 - para2);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>unsigned int pfun(unsigned int *pa);<\/p><p style='line-height:0px'>int main303(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int result;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;result = pfun(&data);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>unsigned int pfun(unsigned int *pa)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;static unsigned int  i  = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = i + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;pa = &i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return i;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>unsigned int pfun(unsigned int *pa);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int result;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return = pfun(&data)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>unsigned int pfun(unsigned int *pa)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;static unsigned int  i  = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = i + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*pa = &i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return i;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int* pfun(unsigned int *pa);<\/p><p style='line-height:0px'>int main304(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int *result  = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;result = pfun(&data);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int* pfun(unsigned int *pa)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int  temp  = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*pa = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;temp = *pa;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return &temp;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int* getAddr(int **x)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int *b = *x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return b;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>unsigned int* pfun(unsigned int *pa);<\/p><p style='line-height:0px'>unsigned int Gdata = 0;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int result  = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return = pfun(&data)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>unsigned int pfun(unsigned int *pa)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*pa = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Gdata = *pa;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return &Gdata;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main_R_1_3_5(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *y = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;free(y);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;free(y);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *y = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != y)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(y);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main136(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int test136(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = new int[3];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete [] x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = 1;    <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main307(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int test307(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = new int[1];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-7"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main308(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (x != NULL)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (x != NULL)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-8"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>\/\/#define NULL 0<\/p><p style='line-height:0px'>int main309(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i  = 1, *x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (x != 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i == 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 != i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} <\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (x != NULL)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j = 3;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (x != NULL)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-3-9"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main401(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double x = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 1.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 2.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x + 5.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double x = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 1.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 2.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x + 5.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-4-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main402(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 0, k = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double x = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 1.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x - 1.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == j)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x + 1.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == j)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == k)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x \/ 2.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == k)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x \/ 3.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/* no deal with *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}    <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 0, k = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double x = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 1.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x - 1.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\/* no deal with *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == j)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x + 1.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == j)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\/* no deal with *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\/* no deal with *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == k)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x \/ 2.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (1 == k)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = x \/ 3.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;\/* no deal with *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}    <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-4-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main403(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-4-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main404(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(0 == x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 1:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break; <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-4-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main405(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-4-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>enum WorkMode { INI = 0, FIGHT, MAINTAIN, TRAIN} work_state1;<\/p><p style='line-height:0px'>int main406(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(work_state1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case INI:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case FIGHT:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case MAINTAIN:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 0:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 1:  \/* 共用 *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 2:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>enum WorkMode { INI = 0, FIGHT, MAINTAIN, TRAIN} work_state;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(work_state)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case INI:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case FIGHT:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case MAINTAIN:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case TRAIN:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 0:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 1:  \/* 共用 *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 2:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-4-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main407(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int k = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 1:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (j > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 2:  <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 3:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 4:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 5:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>enum WorkMode { INI = 0, FIGHT, MAINTAIN, TRAIN} work_state;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int k = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(i)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 1:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (j > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 2:  \/* shared *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 3:  \/* shared *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 4:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 5:  \/* shared *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 6:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 7:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-4-7"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main408(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int z = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 1:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (0 == y)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 2:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch ( y )<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 1:         \/* Compliant     *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;case 2:         \/* Compliant     *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( flag )<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-4-8"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main501(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = -2, j = -2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int k;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='line-height:0px'>L0:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = i + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i < 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto L0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (j < 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = -10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto L1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (k = 0; k < 10; k++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='line-height:0px'>L1:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + k;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-5-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <math.h><\/p><p style='line-height:0px'>#include <setjmp.h><\/p><p style='line-height:0px'>jmp_buf mark;<\/p><p style='line-height:0px'>double fdiv(double a, double b);<\/p><p style='line-height:0px'>int main502(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int jmpret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double r, n1 = 1.0, n2 = 0.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;jmpret = setjmp(mark);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == jmpret)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r = fdiv(n1, n2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>double fdiv(double a, double b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;double div = a \/ b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (fabs(b) < 1e-10)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;longjmp(mark, -1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return div;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-5-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main601(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int idata = 2.5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;idata = idata + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int idata = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;idata = idata + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-6-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main610(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i == !1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i != 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-10"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main611(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;enum Edata{Enum1 = 0, Enum2, Enum3};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;data = Enum2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;enum Edata{Enum1 = 0, Enum2, Enum3} data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;data = Enum2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-11"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main612(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int c, d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;c = a\/b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;d = a%b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-12"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main613(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 1, y = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ilen;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ilen = sizeof(x=y);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 1, y = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ilen;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x  = y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ilen = sizeof(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-13"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <string.h><\/p><p style='line-height:0px'>int main614(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int src[2] = {1,2};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  des[4] = {0, 0, 0, 0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;memcpy(des, src, sizeof(des));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;memcpy(des, src, 4 * 4);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int src[2] = {1,2};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  des[4] = {0, 0, 0, 0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;memcpy(des, src, sizeof(src));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-14"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <string.h><\/p><p style='line-height:0px'>int main615(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int src[4] = {1, 2, 3, 4};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  des[2] = {0, 0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;memcpy(des, src, sizeof(src));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int src[2] = {1, 2, 3, 4};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  des[4] = {0, 0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;memcpy(des, src, sizeof(des));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-15"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int main6162(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = (*x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main616(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *x = (int*)malloc(sizeof(int)), *a = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *z;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z = (int*)malloc(sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL != x)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = (*x);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;free(z);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = (*z);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = *a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;free(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-6-16"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int fun617(void);<\/p><p style='line-height:0px'>int main617(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = fun617();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun617(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *p = (int*)malloc(3  * sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (p)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p++;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p += 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p  = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(p);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdlib.h><\/p><p style='line-height:0px'>#include <malloc.h><\/p><p style='line-height:0px'>int fun(void);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = fun();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *p = (int*)malloc(3  * sizeof(int));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *pbak = p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == p)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p++;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p  = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;free(pbak);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = NULL;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-17"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main618(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char line[5] = {0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"Input a string:\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == gets(line))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"gets error\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"The line entered was: %s\\n\", line);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char line[5] = {0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"Input a string:\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == fgets(line))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"gets error\\n\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"The line entered was: %s\\n\", line);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-18"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <string.h><\/p><p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void main619(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char string1[10] = {0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char string2[10] = {0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncpy(string1, \"Hello world\", 11);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncpy(string2, \"Hello \", 6);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncat(string2, \"word\",  5);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"string1 = %s, string2 = %s\\n\", string1, string2);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>#include <string.h><\/p><p style='line-height:0px'>#include <stdio.h><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>void main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char string1[12] = {0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char string2[12] = {0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncpy(string1, \"Hello world\", 11);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncpy(string2, \"Hello \", 6);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncat(string2, \"word\",  5);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"string1 = %s, string2 = %s\\n\", string1, string2);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-19"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main602(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned char data1 = 256;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;signed char data2 = -129;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned short data1 = 256;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short data2 = -129;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-6-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main603(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i = 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i += 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i -= 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i \/= 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i *= 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i %= 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i <<= 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i >>= 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i &= 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i |= 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (i ^= 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;while(i = 1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j = j + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (;i = 1; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{ <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-6-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main604(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 0, y = 1, z = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((x == 1) | (y ==2))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((x == 3) & (y == 4))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 0, y = 1, z = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((x == 1) || (y ==2))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if ((x == 3) && (y == 4))<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-6-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>char CRC16_TAB[256];<\/p><p style='line-height:0px'>int fun605(int p);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main605(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 1, y = 2, z = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int r;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short k = 0;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = y + (x++);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z = z + (++y);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z = fun605(--z);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;r = fun605(z--);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;r = fun605((int)k++);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int fun605(int p)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = 2 * p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int func6052(unsigned short *q, unsigned short len)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned short us_crc = 0xffff);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;while(len > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int x = 1, y = 2, z = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int r;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = y + x++;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x++;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y++;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z = z + y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z--;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z = fun(z);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;r = fun(z);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z--;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(int p)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = 2 * p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-6-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main606(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x, y, z;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = 0x00000001;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = x << 33;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = 0x80000000;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z = x >> 33;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x, y, z;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = 0x00000001;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;y = x << 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = 0x80000000;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;z = x >> 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main607(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int xdata = 2, ydata = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = 6;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;short ss = -3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;long sl = -10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int sn = -2;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = xdata << (-1 * -3);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = xdata << -1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = ydata >> sn;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = 3; \/\/ ydata (after shift nagetive noumber) may be undefined, reset its value<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = ydata >> ss;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = 3; \/\/ ydata (after shift nagetive noumber) may be undefined, reset its value<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = ydata >> sl;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = 2; \/\/ xdata (after shift nagetive noumber) may be undefined, reset its value<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = xdata << (8 - 10);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = 2; \/\/ xdata (after shift nagetive noumber) may be undefined, reset its value;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = xdata << (-1 * 3);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = 2; \/\/ xdata (after shift nagetive noumber) may be undefined, reset its value<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata <<= (-1 * -3);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = 2; \/\/ xdata shift nagetive number, its value may be undefined, reset its value<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata <<= -1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = 3; \/\/ ydata shift nagetive number, its value may be undefined, reset its value<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata >>=  sn;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = 3; \/\/ ydata shift nagetive number, its value may be undefined, reset its value;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata >>=  ss;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata = 3; \/\/ ydata shift nagetive number, its value may be undefined, reset its value<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ydata >>=  sl;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = 2; \/\/ xdata shift nagetive number, its value may be undefined, reset its value<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata <<=  (8 - 10);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata = 2;  \/\/ xdata shift nagetive number, its value may be undefined, reset its value<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;xdata >>=  (-1 * 3);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-7"
    },
    {
      "forbidden": "<p style='line-height:0px'>void comp(int a[], int n)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i <= n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i] = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int func6081(int index)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int array[100];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;array[index] = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main608(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int array[100], index=-1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;comp(array, 100);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;array[100] = 1;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;func6081(index);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>void comp(int a[], int n)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i] = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int array[100];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;comp(array, 100);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;array[99] = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-8"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main609(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int Data[3] = {0, 0, 0};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Data[i] = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Data[j] = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p>",
      "rule": "R-1-6-9"
    },
    {
      "forbidden": "<p style='line-height:0px'>int printf(int a, int b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ((a > b) ? a : b);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main701(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = printf(2, 3);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>unsigned int fun710(unsigned int par);<\/p><p style='line-height:0px'>int main710(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = fun710(i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>unsigned int fun710(unsigned int par)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 == par)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (2 == par)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (1.5);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (2 * par);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-10"
    },
    {
      "forbidden": "<p style='line-height:0px'>int func(int para)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int stat;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (para >= 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stat = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stat = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (stat);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main711(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int local = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;func(local);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int func(int para)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int stat;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (para >= 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stat = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stat = -1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (stat);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int local = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ing sign = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;sigh = func(local);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/.......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;(void)func(local);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-11"
    },
    {
      "forbidden": "<p style='line-height:0px'>void func(int para)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = para + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main712(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int local = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;(void)func(local);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>void func(int para)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = para + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int local = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;func(local);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-12"
    },
    {
      "forbidden": "<p style='line-height:0px'>static int fun(int paData);<\/p><p style='line-height:0px'>int main713(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, thData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;thData = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = 2 * thData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>static int fun(int paData)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = 2 * paData;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return i;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-13"
    },
    {
      "forbidden": "<p style='line-height:0px'>unsigned int Vel(unsigned int *pcData);<\/p><p style='line-height:0px'>unsigned int Acc(unsigned int *pcData);<\/p><p style='line-height:0px'>int main714(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int dis, hei;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;dis = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;hei = Vel(&dis) + Acc(&dis);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>unsigned int Vel(unsigned int *pcData)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = (*pcData);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;(*pcData) = x*x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>unsigned int Acc(unsigned int *pcData)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = (*pcData);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;(*pcData) = 2 * x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>unsigned int Vel(unsigned int *pcData);<\/p><p style='line-height:0px'>unsigned int Acc(unsigned int *pcData);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int dis, hei, temp1, temp2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;dis = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;temp1 = Vel(&dis);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;temp2 = Acc(&dic);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;hei = temp1 + temp2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>unsigned int Vel(unsigned int *pcData)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = (*pcData);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;(*pcData) = x*x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>unsigned int Acc(unsigned int *pcData)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int x = (*pcData);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;(*pcData) = 2 * x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return x;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-14"
    },
    {
      "forbidden": "<p style='line-height:0px'>int fun715(int datax, ...);<\/p><p style='line-height:0px'>int main715(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ix, iy, iz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iz = fun715(ix, iy);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun715(int datax, ...)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int temp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;temp = 2 * datax;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return temp;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-15"
    },
    {
      "forbidden": "<p style='line-height:0px'>int fun715(int ix, int iy);<\/p><p style='line-height:0px'>int fun716(int datax);<\/p><p style='line-height:0px'>int fun7162(int datax);<\/p><p style='line-height:0px'>int fun7161(int datax);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main716(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ix, iy, iz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iz = fun715(ix, iy);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int fun716(int datax)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int temp = datax - 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (temp > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun716(temp);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return temp;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int fun7161(int datax)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int temp = datax - 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (temp > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun7162(temp);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return temp;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int fun7162(int datax)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int temp = datax - 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (temp > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun7161(temp);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return temp;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-16"
    },
    {
      "forbidden": "<p style='line-height:0px'>unsigned int sum702(unsigned int p1, unsigned short p2);<\/p><p style='line-height:0px'>int main702(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int ix, iy, iz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iz = sum702(ix, iy);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int sum702(unsigned int p1, unsigned short p2)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = unsigned int(p1 + p2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>unsigned int sum(unsigned int p1, unsigned short p2);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int ix, iy, iz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iz = sum(ix, (unsigned short)iy);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>unsigned int sum702(unsigned int p1, unsigned short p2);<\/p><p style='line-height:0px'>int main702(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int ix, iy, iz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ix = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iy = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;iz = sum702(ix);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>unsigned int sum702(unsigned int p1, unsigned short p2)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int ret;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ret = (unsigned int)(p1 + p2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int fcal(int x, int y);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int datax, datay, dataz;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;datax = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;datay = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;dataz = fcal(datax, datay, datax);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int fcal(int x, int y)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;int ret = x + y;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return ret;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>void fun704(int *p1, int *p2);<\/p><p style='line-height:0px'>int main704(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0, j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun704(&i, &j);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void fun(p1, p2)<\/p><p style='line-height:0px'>int *p1;<\/p><p style='line-height:0px'>int *p2;<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*p1 = *p1 + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*p2 = *p2 + 1;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>int comp(float data1, float data2);<\/p><p style='line-height:0px'>int main705(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int v, d, h;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;v = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;d = 20;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;h = comp(v, d);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int comp(int data1, int data2)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;data = 2 * data1 + data2;    <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return data;<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int comp(int data1, int data2);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int v, d, h;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;v = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;d = 20;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;h = comp(v, d);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int comp(int data1, int data2)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int data;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;data = 2 * data1 + data2;    <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return data;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>unsigned int fun706(unsigned int par);<\/p><p style='line-height:0px'>int main706(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j  = fun706(i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun706(unsigned int par)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 == par)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else if (2 == par)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-6"
    },
    {
      "forbidden": "<p style='line-height:0px'>int fun(int a, int *b);<\/p><p style='line-height:0px'>int main707(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 1, j = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int k;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;k = fun(i, &j);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(int a, int *b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 == a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*b = *b + a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*b = *b - a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-7"
    },
    {
      "forbidden": "<p style='line-height:0px'>void fun(int a, int *b);<\/p><p style='line-height:0px'>int main708(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 1, j = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int k;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun(i, &j);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void fun(int a, int *b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 == a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*b = *b + a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*b = *b - a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + 1);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-8"
    },
    {
      "forbidden": "<p style='line-height:0px'>int fun709(int a, int *b);<\/p><p style='line-height:0px'>int main709(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 1, j = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int k;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;k = fun709(i, &j);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun709(int a, int *b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 == a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*b = *b + a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*b = *b - a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-7-9"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main801(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int local = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int para = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/....<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;switch(para)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local = para;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 1:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 2:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local = 4;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return local;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;para ++;<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-8-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main802(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int local = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int para = 0U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/....<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (local >= 0U)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;para = 1U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;para = 2U;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (para == 1U)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/...<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-8-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>extern volatile unsigned short v;    \/\/ from misra rule 2.2  there shall be no dead code<\/p><p style='line-height:0px'>extern char *p;                                \/\/ from misra rule 2.2  there shall be no dead code<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>int main803(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int local = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;unsigned int para = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/....<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;local;                    \/\/ 违背<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;para - 0;               \/\/ 违背 <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;local == para;      \/\/ 违背    <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;local > para;         \/\/ 违背<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  x;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;(void)v;                \/\/ OK   - from misra rule 2.2  there shall be no dead code<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;(int)v;                   \/\/ 违背 - from misra rule 2.2  there shall be no dead code<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;v >> 3;                \/\/ 违背 - from misra rule 2.2  there shall be no dead code<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;x = 5;                   \/\/ 违背 - from misra rule 2.2  there shall be no dead code<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*p++;                   \/\/ 违背 - from misra rule 2.2  there shall be no dead code<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;(*p)++;                 \/\/ OK  - from misra rule 2.2  there shall be no dead code<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;local = x > 3 ? x : v;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return(0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-8-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main804(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int code[4];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char Test[] = \"A\\40B\";<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char A = '\\101';<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;code[0] = 109;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;code[1] = 100;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;code[2] = 011;     \/\/ forbidden<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;code[3] = 0x32;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int code[3];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;code[0] = 109;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;code[1] = 100;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;code[2] = 011;     \/* octal *\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-8-4"
    },
    {
      "forbidden": "<p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned int ucV1 = 0U;      <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;unsigned int ucV2 = 0u;         \/\/违背<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;long               IV1 = 0L;    \/\/遵循<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;long               IV2 = 0l;     \/\/违背<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;float              fV1 = 0.0F;  \/\/遵循<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;float              fV2 = 0.0f;  \/\/违背<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;double             ldV1 = 0.1L; \/\/遵循<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;double             ldV2 = 0.1l; \/\/违背<\/p><p style='line-height:0px'><\/p>",
      "recommend": "<p style='line-height:0px'>unsigned int ucV = 0U;<\/p><p style='line-height:0px'>long               IV =0L;<\/p><p style='line-height:0px'>float               fV = 0.0F;<\/p><p style='line-height:0px'>double           ldV = 0.0;<\/p>",
      "rule": "R-1-8-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>unsigned int Ginum = 0;<\/p><p style='line-height:0px'>int main901(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (Ginum = 0; Ginum < 10; Ginum++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = i - 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-9-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main902(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;float f = 0.0, g = 1.0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (f = 0.0; f < 10.0;  f = f + 1.0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g = g + f;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-9-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>int main903(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j, k;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = 100;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;k = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < j;  i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 2 * i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k = k + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-9-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>int Gstate = 0;<\/p><p style='line-height:0px'>int main904(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(;;)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/....<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (1 == Gstate)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>int GState = 0;<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/....<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (1 == Gstate)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-1-9-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>#define NULL 0<\/p><p style='line-height:0px'>class A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(char* cstr);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~A(void);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char* str;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A::A(char* cstr)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;str = new char[20];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncpy(str, cstr, 20);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::A(void) :<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;str(new char[20])<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;strncpy(str, \"Welcome!\", 20);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::~A(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete [] str;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;str = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;A a(\"Hello world!\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;A b(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;A c;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;c  = b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(char* cstr);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(const A& ca);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(void)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;operator=(const A& ca);<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char* str;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A::A(char* cstr)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;str = new char[20];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncpy(str, cstr, 20);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::A(const A& ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;str = new char[20];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncpy(str, ca.str, 20);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::operator=(const  A& ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == str)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str = new char[20];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;strncpy(str, ca.str, 20);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::A(void) :<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;str(new char[20])<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;strncpy(strr, \"Welcome!\", 20);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::~A(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete [] str;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;str = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;A a(\"Hello world!\");<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;A b(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;A c;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;c  = b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-1-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class B<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g(int a = 0);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B::B(void) : b(1)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B::~B(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int B::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + b);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class D : public virtual B<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~D(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g(int a = 0);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int d;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>D::D(void) : B(), d(2)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>D::~D(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int D::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + d);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20102(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B& b = d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B* pb = &d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D *pd1 = reinterpret_cast<D*>(pb);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D& pd2  = reinterpret_cast<D&>(*pb);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class B<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g(int a = 0);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B::B(void) : b(1)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B::~B(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int B::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + b);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class D : public virtual B<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~D(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g(int a = 0);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int d;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>D::D(void) : B(), d(2)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>D::~D(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int D::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + d);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B& b = d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B* pb = &d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D *pd1 = dynamic_cast<D*>(pb);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D& pd2  = dynamic_cast<D&>(*pb);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-1-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetA(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A::A(void) : a(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void A::SetA(int va)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = va;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class B1 : public A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B1(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetB1(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b1;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B1::B1(void) : A(), b1(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void B1::SetB1(int vb)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b1 = vb;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;SetA(b1 + 1);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class B2 : public A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B2(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetB2(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b2;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B2::B2(void) : A(), b2(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void B2::SetB2(int vb)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b2 = vb;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;SetA(b2 + 2);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>class D3 : public B1, public B2<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D3(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int d;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>D3::D3(void) : B1(), B2(), d(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20103(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D3 thed;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;thed.SetB1(1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;thed.SetB2(2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetA(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A::A(void) : a(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void A::SetA(int va)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = va;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class B1 : public virtual A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B1(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetB1(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b1;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B1::B1(void) : A(), b1(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void B1::SetB1(int vb)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b1 = vb;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;SetA(b1 + 1);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class B2 : public virtual A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B2(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetB2(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b2;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B2::B2(void) : A(), b2(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void B2::SetB2(int vb)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b2 = vb;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;SetA(b2 + 2);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>class D : public B1, public B2<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int d;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>D::D(void) : B1(), B2(), d(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D thed;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;thed.SetB1(1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;thed.SetB2(2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-1-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class B4<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B4(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~B4(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual void f(void) = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B4& operator = (B4 const &rhs);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int kind;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B4::B4(void) : kind(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B4::~B4(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B4& B4::operator = (B4 const &rhs)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;kind = rhs.kind;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (*this);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class D4 : public B4<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D4(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~D4(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual void f(void) {};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D4& operator = (D4 const & rhs);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int member;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>D4::D4(void) : B4(), member(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>D4::~D4(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>D4& D4::operator = (D4 const & rhs)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;member = rhs.member;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (*this);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20104(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D4 d1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D4 d2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B4& b1 = d1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B4& b2 = d2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b1 = b2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class B<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual void f(void) = 0;<\/p><p style='line-height:0px'>protected:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B& operator = (B const &rhs);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int kind;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B::B(void) : kind(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B::~B(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B& B::operator = (B const &rhs)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;kind = rhs.kind;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (*this);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class D : public B<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~D(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual void f(void) {};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D& operator = (D const & rhs);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int member;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>D::D(void) : B(), member(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>D::~D(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>D& D::operator = (D const & rhs)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;member = rhs.member;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (*this);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D d1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D d2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B& b1 = d1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B& b2 = d2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b1 = b2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-1-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>int gVar = 10;<\/p><p style='line-height:0px'>class Foo<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo::Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = gVar;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo::~Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20201(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo thef;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>int gVar = 10;<\/p><p style='line-height:0px'>class Foo;<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;explicit Foo(int);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo::Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo::Foo(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo::~Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo thef(gVar);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-2-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>int gVar2 = 10;<\/p><p style='line-height:0px'>class Foo2<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo2(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetVar(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo2::~Foo2(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void Foo2::SetVar(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20202(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo2 thef;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;thef.SetVar(2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>int gVar = 10;<\/p><p style='line-height:0px'>class Foo<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foo(int b = 10);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void SetVar(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo::Foo(int b)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = b;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo::~Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void Foo::SetVar(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo thef;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;thef.SetVar(2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-2-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class Foo3<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foo3(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foo3(int var);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo3(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int getVar(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo3::Foo3(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo3::Foo3(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo3::~Foo3(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Foo3::getVar(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return a;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void f(Foo3);<\/p><p style='line-height:0px'>int main20203 (void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;f(i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void f(Foo3 thef)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = thef.getVar();<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>int gVar = 10;<\/p><p style='line-height:0px'>class Foo;<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foo(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;explicit Foo(int var);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void GetVar(int);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo::Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo::Foo(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo::~Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void Foo::GetVar(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return a;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void f(int);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;f(i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void f(int i)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo thef(i);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = thef.getVar();<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-2-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>int gVar4 = 10;<\/p><p style='line-height:0px'>class Foo4<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foo4(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;explicit Foo4(int var);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo4::Foo4(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo4::Foo4(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20204(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo4 thef1, thef2(1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>int gVar = 10;<\/p><p style='line-height:0px'>class Foo;<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foo(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;explicit Foo(int var);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo::Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo::Foo(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo thef1, thef2(1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-2-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>int gVar5 = 10;<\/p><p style='line-height:0px'>class Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int docid;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Document(void) : docid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;explicit Document(int );<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Document::Document(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;docid = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class Book  : public Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int bookid;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Book(void) : bookid(1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int main20205(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Book mybook;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>int gVar = 10;<\/p><p style='line-height:0px'>class Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int docid;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Document(void) : docid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;explicit Document(int );<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Document::Document(int var)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;docid = var;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class Book  : public Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int bookid;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Book(void) : Document(1), bookid(1)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Book mybook;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-2-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class B31<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B31(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~B31(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;virtual void f(int a) = 0;<\/p><p style='line-height:0px'>protected:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B31(const B31&);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B31& operator = (const B31&);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B31::B31(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B31::~B31(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class D31 : public B31<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D31(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;explicit D31(int a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~D31(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual void f(int a);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* md;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D31(const D31&);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D31& operator = (const D31&);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>D31::D31(int a) : B31(), md(new int)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*md = a;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void D31::f(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;*md = a;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>D31::~D31(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete md;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;md = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20301(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B31* d = new D31(1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;d->f(2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;d = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class B<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B(void)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~B(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;virtual void f(int a) = 0;<\/p><p style='line-height:0px'>protected:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B(const B&);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B& operator = (const B&);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B::B(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B::~B(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class D : public B<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;explicit D(int a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~D(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual void f(int a);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* md;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D(const D&);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;D& operator = (const D&);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>D::D(int a) : B(), md(new int)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*md = a;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void D::f(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;*md = a;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>D::~D(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete md;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;md = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B* d = new D(1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;d->f(2);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;d = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-3-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class Foo32<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo32(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo32(void);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo32::Foo32(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo32::~Foo32(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (1 == a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20302(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foo32 f;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(int e)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class Foo<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Foo(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~Foo(void);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Foo::Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a = 1;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Foo::~Foo(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (1 == a)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(int e)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foo f;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(int e)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;} <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-3-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class Base<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Base(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~Base(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g(int a = 0);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Base::Base(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Base::~Base(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Base::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + 1);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class Derived : public virtual Base<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Derived(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~Derived(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g(int a = 1);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Derived::Derived(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Derived::~Derived(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Derived::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a+11);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20401(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Derived d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Base& b = d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = b.g();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = d.g();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class Base<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Base(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~Base(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g1(int a = 0);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g2(int a = 0);<\/p><p style='line-height:0px'>i};<\/p><p style='line-height:0px'>Base::Base(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Base::~Base(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Base::g1(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + 1);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Base::g2(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + 2);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class Derived : public virtual Base<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Derived(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~Derived(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g1(int a = 0);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g2(int a);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Derived::Derived(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Derived::~Derived(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Derived::g2(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a+11);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Derived::g2(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a+12);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Derived d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Base& b = d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = b.g1();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = d.g1();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = d.g2();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = d.g2(0);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-4-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class Base2<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Base2(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~Base2(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g(int a = 0);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Base2::Base2(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Base2::~Base2(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Base2::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + 1);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class Derived2 : public Base2<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Derived2(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~Derived2(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int g(int a = 0);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Derived2::Derived2(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Derived2::~Derived2(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Derived2::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a+2);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20402(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Derived2 d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Base2& b = d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = b.g();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = d.g();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class Base<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Base(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~Base(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g(int a = 0);<\/p><p style='line-height:0px'>i};<\/p><p style='line-height:0px'>Base::Base(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Base::~Base(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Base::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a + 1);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class Derived : public Base<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Derived(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~Derived(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual int g(int a = 0);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>Derived::Derived(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>Derived::~Derived(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Derived::g(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (a+2);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i, j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Derived d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Base& b = d;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = b.g();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;j = d.g();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-4-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class A43<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A43(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~A43(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual void foo43(void) = 0;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A43::A43(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A43::~A43(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>class B43 : public A43<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B43(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~B43(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual void foo43(void);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>B43::B43(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>B43::~B43(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void B43::foo43(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class C43 : public B43<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;C43(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~C43(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual void foo43(void) = 0;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>C43::C43(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>C43::~C43(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20403(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;B43 myb;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;myb.foo43();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-4-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>struct S<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int k;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>class C<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int j;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int k;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;C(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~C(void);<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>C::C(void) : i(0), j(0), k(0)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>C::~C(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20501(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;S* s = new S;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;s->i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;s->j = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;s->k = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;C* c = reinterpret_cast<C *>(s);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......   <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-5-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class A52<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A52(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;explicit A52(int);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;virtual ~A52(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int ma;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A52::A52(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ma = 0;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A52::A52(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;ma = a;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A52::~A52(void)<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20502(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A52 const a1 = A52(10);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A52* a2 = const_cast<A52*>(&a1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a2->ma = 11;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A52 &a3 = const_cast<A52&>(a1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a3.ma = 12;  <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-5-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>void* fun2(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* p = new int[3], *p2; <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void* p3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[0] = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[1] = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[2] = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p2 = (int*)new int[2];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p2[0] = 5;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p2[1] = 6;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p3 = (void*)new int[3];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p3 = reinterpret_cast<void*>(new int[3]);<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete [] p;<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return p3;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void fun1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* p = new int;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*p = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p = nullptr;    <\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun1();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun2();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>void fun1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* p = new int;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;*p = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void fun2(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* p = new int[3]; <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[0] = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[1] = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[2] = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete [] p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun1();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun2();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-6-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>void fun(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* p = new int [3];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[0] = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[1] = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[2] = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20602(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>void fun(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* p = new int [3];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[0] = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[1] = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p[2] = 3;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete [] p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;p = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-6-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namespace std;<\/p><p style='line-height:0px'>int fun63(void)<\/p><p style='line-height:0px'>int main20603(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = fun63();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun63(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int  *p = new int[3];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (0 == p)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p++;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete [] p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>int fun(void);<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;i = fun();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int fun(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *p = new int[3];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int *pbak = p;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;if (NULL == p)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (-1);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p++;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*p = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delete [] pbak;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-6-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namespace std;<\/p><p style='line-height:0px'>void fun1(int p[10])<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p[i] = p[i] + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void fun2(int *q)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q[i] = q[i] + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20701(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun1(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun2(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>void fun1(int (&p)[10])<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (i = 0; i < 10; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p[i] = p[i] + 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int a[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun1(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;fun2(a);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-7-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class A2072<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A2072(int n_, int *b_);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A2072(const A2072 &ca);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A2072(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~A2072(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A2072 operator = (const A2072 &ca);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* get_b(void) const;<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* b;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A2072::A2072(int n_, int* b_)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = n_;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = b_[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A2072::A2072(const A2072& ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = ca.n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = ca.b[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A2072 A2072::operator = (const A2072 &ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = ca.n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = ca.b[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return *this;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A2072::A2072(void) : b(new int[0]), n(1)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b[0] = 0;   <\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A2072::~A2072(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete[] b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int* A2072::get_b(void) const<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return b;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20702(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b[2] = {1, 2};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A2072 const a(2, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a.get_b()[0] = i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(int n_, int *b_)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(const A& ca);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A& operator = (const A& ca);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;const int* get_b(void) const;<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* b;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A::A(int n_, int* b_)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = n_;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = b_[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::A(const A& ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = ca.n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = ca.b[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A& A::operator = (const A& ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = ca.n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = ca.b[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return *this;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::A(void) : b(new int[0]), n(1)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b[0] = 0;   <\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::~A(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete[] b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>const int* A::get_b(void) const;<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return b;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b[2] = {1, 2};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A const a(2, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;a.get_b()[0] = i;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-7-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>#define NULL 0<\/p><p style='line-height:0px'>class A73<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A73(int n_, int *b_);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A73(const A73& ca);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A73(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~A73(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void operator = (const A73& ca);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int& get_n(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* b;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A73::A73(int n_, int* b_)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = n_;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = b_[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A73::A73(const A73& ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = ca.n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = ca.b[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void A73::operator = (const A73& ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = ca.n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = ca.b[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A73::A73(void) : b(new int[0]), n(1)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b[0] = 0;   <\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A73::~A73(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete[] b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int& A73::get_n(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return n;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20703(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b[2] = {1, 2};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A73 a(2, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int& n = a.get_n();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>#define NULL 0<\/p><p style='line-height:0px'>class A<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(int n_, int *b_);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(const A& ca);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;~A(void);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;void operator = (const A& ca);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int get_n(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int* b;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>A::A(int n_, int* b_)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = n_;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = b_[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::A(const A& ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = ca.n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0； i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = ca.b[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>void A::operator = (const A& ca)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = ca.n;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = new int[n];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;for (int i = 0; i < n; i++)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i] = ca.b[i];<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::A(void) : b(new int[0]), n(1)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b[0] = 0;   <\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>A::~A(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;delete[] b;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;b = NULL;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int A::get_n(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return n;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int b[2] = {1, 2};<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A a(2, b);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int& n = a.get_n();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;n = 10;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-7-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>class Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Document(void) : docid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int get_docid(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int docid;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int Document::get_docid(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return docid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class Book :  public Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Book(void) : Document(), bookid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int get_bookid(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int bookid;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int Book::get_bookid(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return bookid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20801(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Book mybook;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw mybook;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(Document& d)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << d.get_docid() << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(Book& b)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << b.get_bookid() << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Document(void) : docid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int get_docid(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int docid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Document::get_docid(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return docid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>class Book :  public Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Book(void) : Document(), bookid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int get_bookid(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int bookid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int Book::get_bookid(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return bookid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Book mybook;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw mybook;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(Book& b)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout << b.get_bookid() << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(Document& d)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout << d.get_docid() << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-8-1"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class A1<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A1(void) {};<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>class A2<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A2(void) {};<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int main20802(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw A1();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw A2();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(A1& )<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout << \"exception: A1\" << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>#include <iostream><\/p><p style='line-height:0px'>using namspace std;<\/p><p style='line-height:0px'>class A1<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A1(void) {};<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>class A2<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;A2(void) {};<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int Book::get_bookid(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return bookid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i > 0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw A1();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw A2();<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(A1& )<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout << \"exception: A1\" << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(A2& )<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout << \"exception: A2\" << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-8-2"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>class Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Document(void) : docid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int get_docid1(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int docid;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int Document::get_docid1(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return docid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main20803(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Document mydoc1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw &mydoc1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(Document *d )<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << d->get_docid() << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>class Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Document(void) : docid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int get_docid(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int docid;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int Document::get_docid(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return docid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Document mydoc1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw mydoc1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(Document& d)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << d.get_docid() << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-8-3"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include <iostream.h><\/p><p style='line-height:0px'>using namespace std;<\/p><p style='line-height:0px'>class Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Document(void) : docid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int get_docid(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int docid;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int Document::get_docid(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return docid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Document mydoc1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw mydoc1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch (...)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << \"default  catch\" << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(Document& d)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << d.get_docid() << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = 2;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (i);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>class Document<\/p><p style='line-height:0px'>{<\/p><p style='line-height:0px'>public:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;Document(void) : docid(0)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int get_docid(void);<\/p><p style='line-height:0px'>private:<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int docid;<\/p><p style='line-height:0px'>};<\/p><p style='line-height:0px'>int Document::get_docid(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return docid;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;int i = 0;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Document mydoc1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw mydoc1;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(Document& d)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << d.get_docid() << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(...)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/cout << \"default  catch\" << endl;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-8-4"
    },
    {
      "forbidden": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>#define NULL 0<\/p><p style='line-height:0px'>int main20805(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(int)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(const char* )<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "recommend": "<p style='line-height:0px'>\/\/#include <iostream><\/p><p style='line-height:0px'>\/\/using namspace std;<\/p><p style='line-height:0px'>#define NULL 0<\/p><p style='line-height:0px'>int main(void)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;char* p = NULL;<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;try <\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw (p);<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw (static_cast<const char*>(NULL));<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(int)<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;catch(const char* )<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\/\/......<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;}<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return (0);<\/p><p style='line-height:0px'>}<\/p>",
      "rule": "R-2-8-5"
    },
    {
      "forbidden": "<p style='line-height:0px'>#include \"R-2-9-1-forbidden.h\"<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'>template <typename T><\/p><p style='line-height:0px'>T A<T>::test(int a)<\/p><p style='line-height:0px'>{<\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;T b = a + 1;\t<\/p><p style='line-height:0px'><\/p><p style='margin-top:0px;margin-bottom:0px'>&nbsp;&nbsp;&nbsp;&nbsp;return b;<\/p><p style='line-height:0px'>}<\/p><p style='line-height:0px'><\/p><p style='line-height:0px'><\/p>",
      "rule": "R-2-9-1"
    }
  ],
  "standard": "gjb"
}
